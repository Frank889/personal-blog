<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>My Little Coding Blog</title>
    <link>anothercoding.blog/personal-blog/</link>
    <description>Recent content on My Little Coding Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 09 Jun 2019 16:36:32 -0700</lastBuildDate>
    
	<atom:link href="anothercoding.blog/personal-blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>动态规划背包问题的变型</title>
      <link>anothercoding.blog/personal-blog/post/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98%E7%9A%84%E5%8F%98%E5%9E%8B/</link>
      <pubDate>Sun, 09 Jun 2019 16:36:32 -0700</pubDate>
      
      <guid>anothercoding.blog/personal-blog/post/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98%E7%9A%84%E5%8F%98%E5%9E%8B/</guid>
      <description>问题描述 问题基本描述： c = [1000,1000,680,660,500,800]; % 物品种类
v = [3,4,1,2,3,1]; % 物品价值
Vth = 2000; % 所选c对应的v值之和的阈值
求 c 的一个组合如{c_1, c_2}，使得 sum(c_i)&amp;gt;=Vth 且 对应的 sum(v_i) 最小
这题的结果应该是c 取{680，660，800}， 对应的v_i之和最小 为 1+2+1 = 4
这个问题和背包问题很像 但是又有区别，求得是最小价值，重量有下限的背包
动态规划背包问题: 重量有下限，价值和最小</description>
    </item>
    
    <item>
      <title>NLP&#43;V_深度学习数据集标注工具_图像语料数据库_实验室搜索</title>
      <link>anothercoding.blog/personal-blog/post/nlp&#43;v_%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%95%B0%E6%8D%AE%E9%9B%86%E6%A0%87%E6%B3%A8%E5%B7%A5%E5%85%B7_%E5%9B%BE%E5%83%8F%E8%AF%AD%E6%96%99%E6%95%B0%E6%8D%AE%E5%BA%93_%E5%AE%9E%E9%AA%8C%E5%AE%A4%E6%90%9C%E7%B4%A2/</link>
      <pubDate>Tue, 07 Feb 2017 14:17:31 -0700</pubDate>
      
      <guid>anothercoding.blog/personal-blog/post/nlp&#43;v_%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%95%B0%E6%8D%AE%E9%9B%86%E6%A0%87%E6%B3%A8%E5%B7%A5%E5%85%B7_%E5%9B%BE%E5%83%8F%E8%AF%AD%E6%96%99%E6%95%B0%E6%8D%AE%E5%BA%93_%E5%AE%9E%E9%AA%8C%E5%AE%A4%E6%90%9C%E7%B4%A2/</guid>
      <description>~~因为不太会使用opencv、matlab工具，所以在找一些比较简单的工具。
一、NLP标注工具 能不能构建一个中文文本的标注工具，可以达到以下两个特点：
标注过程背后含有智能算法，将人工重复劳动降到最低；
标注界面显而易见地友好，让标注操作尽可能简便和符合直觉。
答案是可以的。事实上很多标注工具已经做到了这一点，最先进的如Explosion.ai的Prodigy；然而开发了著名的NLP开源包Spacy的explosion.ai选择了将Prodigy闭源，而Spacy支持中文也仍然遥遥无期。我们希望构建一个开源的中文文本标注工具，而本文很多的技术灵感正是来自Prodigy文档。 流程：
用户标一个label
主动学习的后台算法分为online和offline部分。online部分即时更新模型，可使用诸如SVM、bag of words等尽可能快的传统方法；offline部分当标注数据积累到一定数量时更新模型，可使用准确度较高的深度学习模型。
模型更新后，对尽可能多的example做预测，将确信度排序，取确信度最低的一个example作为待标注例子。重复1的过程。
可以想象如果模型训练得好的话，这个过程将直接忽略掉确信度最大的那些例子，而把所有重点放在分类边界上的那些确信度小的例子。这样可以尽算法所能减少用户端的人工工作量。
1 BRAT BRAT是一个基于web的文本标注工具，主要用于对文本的结构化标注，用BRAT生成的标注结果能够把无结构化的原始文本结构化，供计算机处理。利用该工具可以方便的获得各项NLP任务需要的标注语料。 
2 Prodigy Prodigy给了一个非常好的demo，每一次的标注只需要用户解决一个case的问题。以文本分类为例，对于算法给出的分类结果，只需要点击“正确”提供正样本，“错误”提供负样本，“略过”将不相关的信息滤除，“Redo”让用户撤回操作，四个功能键以最简模式让用户进行标注操作。
真正应用中，应该还要加入一个用户自己加入标注的交互方式，比如用户可以高亮一个词然后选择是“公司”，或者链接两个实体选择他们的关系等等。
3 IEPY 整个工程比较完整，有用户管理系统。前端略重，对用户不是非常友好
4 DeepDive (Mindtagger) 介绍 http://deepdive.stanford.edu/labeling
前端比较简单，用户界面友好。
前端代码 https://github.com/HazyResearch/mindbender
将DeepDive的corenlp部分转为支持中文的代码尝试：
https://github.com/SongRb/DeepDiveChineseApps
https://github.com/qiangsiwei/DeepDive_Chinese
https://github.com/mcavdar/deepdive/commit/6882178cbd38a5bbbf4eee8b76b1e215537425b2
二、VS标注工具——LabelImg ###1、PyQt 用 PyQt 写的, 很轻量, Linux/macOS/Windows 全平台均可运行. 工具github网址：https://github.com/tzutalin/labelImg 知乎介绍网址：有图像标注工具推荐或者分享吗？  ###2、Vatic 参考：人工智能AI工具-视频标注工具vatic的搭建和使用 视频标注工具vatic，Vatic源自MIT的一个研究项目(Video Annotation Tool from Irvine, California)。输入一段视频，支持自动抽取成粒度合适的标注任务并在流程上支持接入亚马逊的众包平台Mechanical Turk。
网址：http://web.mit.edu/vondrick/vatic/
Vatic源自MIT的一个研究项目(Video Annotation Tool from Irvine, California)。输入一段视频，支持自动抽取成粒度合适的标注任务并在流程上支持接入亚马逊的众包平台Mechanical Turk。除此之外，其还有很多实用的特性： 1.简洁使用的GUI界面，支持多种快捷键操作 2.基于opencv的tracking，这样就可以抽样的标注，减少工作量 具体使用时，可以设定要标注的物体label，比如：水果，人，车，等等。然后指派任务给到众包平台（也可是自己的数据工程师）。现阶段支持的标注样式是框（box）。一个示例，下图标注了NBA直播比赛中的运动员
3、BBox-Label-Tool&amp;rdquo;  4、图像标注VS2013项目 有人自己写了一个版本： 打框的代码(c++)我封装成了dll，下载地址：图像标注VS2013项目 （我的环境是win7vs2013旗舰版，win8 win10好像不能运行）</description>
    </item>
    
    <item>
      <title>Dynamic Programming Knapsack Problem</title>
      <link>anothercoding.blog/personal-blog/post/dynamic-programming-knapsack-problem/</link>
      <pubDate>Fri, 20 Feb 2015 03:35:38 -0700</pubDate>
      
      <guid>anothercoding.blog/personal-blog/post/dynamic-programming-knapsack-problem/</guid>
      <description>aksjdhkjasd</description>
    </item>
    
  </channel>
</rss>